# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  id: Float!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User
  product: Product
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Product {
  id: Float!
  description: String!
  price: Float!
  quantity: Float!
  images: [String!]
  name: String!
  vendor: User
  comments: [Comment!]
}

type User {
  id: Float!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  roles: [String!]
  products: [Product!]
}

type ErrorType {
  message: String!
  code: String
}

type UserLoginResponse {
  user: User!
  token: String!
  error: ErrorType
}

type RegisterResponse {
  activation_token: String!
  error: ErrorType
}

type ActivationResponse {
  user: User
  error: ErrorType
}

type ForgotPasswordResponse {
  message: String!
  error: ErrorType
}

type ResetPasswordResponse {
  user: User!
  error: ErrorType
}

type GetProductsResponse {
  products: [Product!]
  total: Float
  error: ErrorType
}

type GetProductResponse {
  product: Product
  error: ErrorType
}

type UploadImagesResponse {
  product: Product
  error: ErrorType
}

type CreateProductsResponse {
  product: Product
  error: ErrorType
}

type AddCommentProductResponse {
  message: String!
  error: ErrorType
}

type Query {
  getAdminData: String!
  getUserData: String!
  getUsers: [User!]!
  getMe: User!
  getProducts(getProductsDto: GetProductsDto!): GetProductsResponse!
  getMyProducts(getProductsDto: GetProductsDto!): GetProductsResponse!
  getProduct(getProductDto: GetProductDto!): GetProductResponse!
}

input GetProductsDto {
  keyword: String
  take: Float
  skip: Float
}

input GetProductDto {
  id: Float!
}

type Mutation {
  register(userRegisterInput: UserRegisterInput!): RegisterResponse!
  activateUser(activationInput: ActivationInput!): ActivationResponse!
  login(loginInput: UserLoginInput!): UserLoginResponse!
  logout: String!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): ForgotPasswordResponse!
  resetPassword(resetPasswordInput: ResetPasswordInput!): ResetPasswordResponse!
  createProduct(createProductDto: CreateProductDto!): CreateProductsResponse!
  productImagesUpload(productImagesUploadDto: ProductImagesUploadDto!, images: [Upload]): UploadImagesResponse!
  addCommentProduct(addCommentProductInput: AddCommentProductInput!): AddCommentProductResponse!
}

input UserRegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  roles: [String!]
}

input ActivationInput {
  activationToken: String!
  activationCode: String!
}

input UserLoginInput {
  email: String!
  password: String!
}

input ForgotPasswordInput {
  email: String!
}

input ResetPasswordInput {
  password: String!
  activationToken: String!
}

input CreateProductDto {
  description: String!
  price: Float!
  quantity: Float!
  name: String!
}

input ProductImagesUploadDto {
  id: Float!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input AddCommentProductInput {
  productId: Float!
  comment: String!
}

type Subscription {
  userAdded: User!
  productCreated: Product!
}